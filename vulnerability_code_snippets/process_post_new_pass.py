def handle_request(self, request, response):
  """HTTP request handler for new password POST submission"""

  # Before we do anything else, ensure the user's session is authenticated
  if not self.check_auth(request.cookies['session_id'])
    response.set_status(401, "Permission denied")
    return self.send_template(self.templates.NEW_PASSWORD_AUTH_ERROR)

  # Retrieve and check presence of form parameters
  username = request.POST_vars['username']
  password1 = request.POST_vars['pw']
  password2 = request.POST_vars['pw_confirm']
  if not username or not password1 or not password2:
    # Display the form again if any field is missing
    return self.send_template(self.templates.NEW_PASSWORD_FORM,
                              username=username, pw=password1,
                              pw_confirm=password2,
                              error="Missing form fields")

  # Check that the password matches the confirmation string
  if password1 != password2:
    return self.send_template(self.templates.NEW_PASSWORD_FORM,
                              username=username, pw=password1,
                              pw_confirm=password2,
                              error="Password confirmation does not match")

  # Update the user's account with the new password
  hashed = base64.b64encode(md5(password1))
  update_query = "UPDATE accounts SET password = '" + hashed + "' "
  update_query += "WHERE username = '" + username + "'"
  if not self.database.issue_query(update_query):
    # oh dear, database problems!
    response.set_status(500, "Internal error")
    return self.send_template(self.templates.NEW_PASSWORD_INTERNAL_ERROR)

  # All done
  return self.send_template(self.templates.NEW_PASSWORD_SUCCESS)